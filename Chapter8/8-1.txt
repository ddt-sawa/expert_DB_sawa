演習8-1 ビジネスロジックの実装方法の検討

 本文で代理キーについて解説した際、テーブルに主キーを設定せず、重複行データを登録後に削除する、
という間違った設計について触れました。しかし、主キーによる一意性制約に限らず、データが満たすべき
様々な条件(ビジネスロジック)を、テーブルの制約ではなく、アプリケーションコードによって実装することは
一般的に行われています。
 さて、このビジネスロジックをアプリケーションコードで実装することについて、以下の問について考えてください。

問1 ビジネスロジックをアプリケーションコードで実装することの是非
 ビジネスロジックをアプリケーションコードで実装すると、
DBMS内で値が不正であるかそうでないかの判断ができなくなるので、
ビジネスロジックから逸脱した値をDBMSに登録してしまう可能性が考えられる。
 利点としては、同じデータベースを複数のアプリケーションで使い回す際に、異なるビジネスロジックを
実装できることが挙げられる。また、SQLは列同士の比較が困難であったり、エラー内容をアプリケーションに返却することができないため、
アプリケーション側でしか実装できない条件というものが存在することも確かである。

問2 ビジネスロジックをデータベースの「トリガー」で実装することの是非
  ビジネスロジックをトリガーで実装すると、トリガーによるトリガーが発生した場合
影響がどこまで波及するのか把握できなくなるというデメリットが考えられる。
またアプリケーション側にエラー内容を返せない上に、自動的に値操作が行われるので、
テーブルのどの部分で不正な操作が行われたのか特定が難しいことも問題である。
 利点としては、条件分岐をDBMS側の文頭で行えるため、アプリケーション側では
メインフローの処理のみを記すことができ、結果としてコードの可読性が増すということが挙げられる。　
